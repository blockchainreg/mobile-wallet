// Generated by LiveScript 1.5.0
(function () {
  var observer,
    ref$,
    observable,
    toJS,
    render,
    react,
    app,
    dataScheme,
    window,
    web3,
    autodetectLang,
    getDevice,
    state,
    store,
    changeDevice,
    lockWallet,
    newIdle,
    resetIdle,
    i$,
    len$,
    event,
    web3t,
    Main,
    bootstrap,
    out$ = (typeof exports != 'undefined' && exports) || this,
    toString$ = {}.toString;
  observer = require('mobx-react').observer;
  (ref$ = require('mobx')), (observable = ref$.observable), (toJS = ref$.toJS);
  render = require('react-dom').render;
  react = require('react');
  app = require('./app.js');
  dataScheme = require('./data-scheme.js');
  window = require('./browser/window.js');
  web3 = require('./web3.js');
  autodetectLang = require('./autodetect-lang.js');
  getDevice = require('./get-device.js');
  state = {
    timeout: null,
  };
  store = observable(dataScheme);
  changeDevice = function () {
    return (store.current.device = getDevice());
  };
  lockWallet = function () {
    if (window.nolock === true) {
      return;
    }
    return (store.current.page = 'locked');
  };
  newIdle = function () {
    return setTimeout(lockWallet, 30000);
  };
  resetIdle = function () {
    clearTimeout(state.timeout);
    return (state.timeout = newIdle());
  };
  window.addEventListener('resize', changeDevice);
  for (
    i$ = 0,
      len$ = (ref$ = ['mousemove', 'click', 'touchmove', 'keydown']).length;
    i$ < len$;
    ++i$
  ) {
    event = ref$[i$];
    window.addEventListener(event, resetIdle);
  }
  out$.web3t = web3t = web3(store);
  out$.store = store;
  Main = observer(function (arg$) {
    var store;
    store = arg$.store;
    return app({
      store: store,
      web3t: web3t,
    });
  });
  out$.bootstrap = bootstrap = function (root, options) {
    var store;
    store.root = root;
    render(Main.pug((store = store)), root);
    if ((options != null ? options.autoLang : void 8) !== false) {
      autodetectLang(store);
    }
    if (toString$.call(options).slice(8, -1) === 'Object') {
      return web3t.setPreference(options);
    }
  };
  importAll$(window, out$);
  function importAll$(obj, src) {
    for (var key in src) obj[key] = src[key];
    return obj;
  }
}.call(this));
