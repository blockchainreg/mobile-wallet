// Generated by LiveScript 1.5.0
(function () {
  var ref$, map, take, drop, filter, loadRegistry;
  (ref$ = require('prelude-ls')),
    (map = ref$.map),
    (take = ref$.take),
    (drop = ref$.drop),
    (filter = ref$.filter);
  loadRegistry = require('./load-registry.js');
  module.exports = curry$(function (store, e) {
    var cb;
    cb = alert;
    e.stopPropagation();
    e.nativeEvent.stopImmediatePropagation();
    store.current.addCoin = true;
    return loadRegistry(function (err, registry) {
      var installedTokens,
        this$ = this;
      if (err != null) {
        return cb(err);
      }
      installedTokens = map(function (it) {
        return it.token;
      })(store.coins);
      store.current.filterPlugins = '';
      return (store.registry = filter(function (it) {
        return !in$(it.token, installedTokens);
      })(registry));
    });
  });
  function in$(x, xs) {
    var i = -1,
      l = xs.length >>> 0;
    while (++i < l) if (x === xs[i]) return true;
    return false;
  }
  function curry$(f, bound) {
    var context,
      _curry = function (args) {
        return f.length > 1
          ? function () {
              var params = args ? args.concat() : [];
              context = bound ? context || this : this;
              return params.push.apply(params, arguments) < f.length &&
                arguments.length
                ? _curry.call(context, params)
                : f.apply(context, params);
            }
          : f;
      };
    return _curry();
  }
}.call(this));
